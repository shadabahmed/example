version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - >-
        if expr "$SHOULD_DEPLOY" : "true" ; then
          echo Logging in to Amazon ECR...
          aws --version
          $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
        fi
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo "$COMMIT_HASH" > commit.sha
      - echo Building the Docker image...
      - docker build -t $IMAGE_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_NAME:$IMAGE_TAG $REPOSITORY_URL:$IMAGE_TAG
      - docker tag $IMAGE_NAME:$IMAGE_TAG $REPOSITORY_URL:latest
      - echo Running tests...
      - docker run $IMAGE_NAME:$IMAGE_TAG /usr/src/canaryapp/node_modules/mocha/bin/mocha
  post_build:
    commands:
      - >-
        if expr "$SHOULD_DEPLOY" : "true" && expr "$CODEBUILD_BUILD_SUCCEEDING" : "1" ; then
          echo Build completed on `date`;
          echo Pushing the Docker images...;
          docker push $REPOSITORY_URL:$IMAGE_TAG;
          docker push $REPOSITORY_URL:latest;
          echo Writing image definitions file...;
          printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_NAME $REPOSITORY_URL:latest > imagedefinitions.json;
          zip imagedefinitions.zip imagedefinitions.json
          echo "Need to update this to only run on master branch"
        else
          echo "You have specified a test-only buildspec, or the build failed. To push the container to ECR, set the environment variable SHOULD_DEPLOY=true";
        fi
artifacts:
  files: imagedefinitions.zip